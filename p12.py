"""

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

"""


def get_triangle():
    ind = 0
    last_num = 0
    while True:
        ind += 1
        last_num += ind 
        yield last_num

def get_num_divisors(n):
    div = set([1,n])
    low = 1
    high = n
    while low <= high:
        if n % low == 0:
            high = n / low
            div.add(low)
            div.add(high)
        low += 1
    return div

def get_first_divisors(n):
    tri = get_triangle()
    num_divisors = 0
    while num_divisors < n:
        next_tri = tri.next()
        div = get_num_divisors(next_tri)
        if len(div) > n:
            return next_tri

